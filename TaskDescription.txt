Общая часть задания: написать приложение, которое будет реализовывать алгоритм сортировки по переданным классам.

1) Приложение должно быть выложено на гитхаб/гитлаб, количество веток с кодом должно соответствовать количеству
участников (минимум), все ветки в итоге должны быть смерджены в master/main ветку.
2) Вся архитектура и код стайл должны соответствовать конвенциям языка Java.

Программа должна выполняться в цикле. Выход из цикла возможен только путем соответствующего выбора пользователя.
Пользователь должен иметь возможности:
а) Выбирать варианты заполнения исходного массива данных (из файла, рандом, вручную) и его длину.
б) Найти какой-либо элемент отсортированной коллекции при помощи алгоритма бинарного поиска,
который также необходимо реализовать.
--> Сортировка - InsertionSort <--
Сортировка и бинарный поиск должны быть реализованы с использованием дженериков и быть
универсальными под любые классы. В программе должен использовать паттерн стратегия. Сортировать необходимо
кастомные классы - класс должен иметь реализованный паттерн Builder.
Для вводимых данных (в тч из файла) должна производится валидация данных.

Классы:
-> Животное (Вид, Цвет глаз, Шерсть (булка))
-> Бочка (Объем, Хранимый материал, Материал из которого изготовлена)
-> Человек (Пол, Возраст, Фамилия)

Доп. задание: дополнительно к основным сортировкам реализовать эти же алгоритмы сортировки таким образом, что классы
будут сортироваться по какому-либо числовому полю таким образом, что классы с четными значениями будут сортироваться
в натуральном порядке, а с нечетными оставаться на своих местах.

21.09 Доп условие: один из классов (любой) должен быть иммутабельным

22.09 Альтернативный алгоритм должен сортировать по такому принципу:
[6, 3, 5, 2, 8, 4]
[2, 3, 5, 4, 6, 8]

23.09 Через comparable можете сделать compareTo по всем, а потом сделать отдельный метод, который будет компаратор принимать